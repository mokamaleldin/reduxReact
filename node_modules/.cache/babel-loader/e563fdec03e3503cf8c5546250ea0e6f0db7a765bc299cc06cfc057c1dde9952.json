{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n//1-every slice need a name\n//2- insitial State\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {}\n});\n\n//forwarded to\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter - 1\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n//Store ( change datat in store)\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","counterReducer","state","action","type","amount","store"],"sources":["/home/mkee/learn/react/appRedux/reduxReact/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux'\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = { counter: 0, showCounter: true }\n\n//1-every slice need a name\n//2- insitial State\ncreateSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers:{}\n})\n\n//forwarded to\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n    if (action.type === 'decrement') {\n        return {\n            showCounter: state.showCounter,\n            counter: state.counter - 1\n        }\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        }\n    }\n    return state;\n}\n\n//Store ( change datat in store)\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAEtD;AACA;AACAH,WAAW,CAAC;EACRI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAC,CAAC;AACd,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHP,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE,MAAM;MACtCP,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EACA,IAAIK,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHN,WAAW,EAAEI,KAAK,CAACJ,WAAW;MAC9BD,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG;IAC7B,CAAC;EACL;EAEA,IAAIM,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHN,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACnB,CAAC;EACL;EACA,OAAOK,KAAK;AAChB,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGZ,WAAW,CAACO,cAAc,CAAC;AAEzC,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}